{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Civic Cloud Documentation \u00b6 Welcome, browse sections at the top of the site.","title":"Civic Cloud Documentation"},{"location":"#civic-cloud-documentation","text":"Welcome, browse sections at the top of the site.","title":"Civic Cloud Documentation"},{"location":"echo-service/","text":"Echo service \u00b6 Open https://echo-http.sandbox.k8s.phl.io/ to verify cluster connectivity and ingress.","title":"Echo service"},{"location":"echo-service/#echo-service","text":"Open https://echo-http.sandbox.k8s.phl.io/ to verify cluster connectivity and ingress.","title":"Echo service"},{"location":"grafana/","text":"Grafana \u00b6 New clusters will start with the grafana deployment blocked from starting a pod for lack of the grafana-initial-admin secret existing. Creating this secret will enable grafana to start up and create an initial admin login. The secret should be left on the cluster after that as the deployment requires it, but making changes to it will not update any Grafana login unless Grafana\u2019s persistent storage is reset. Creating grafana-admin-secret \u00b6 Use this command to generate a usable secret with a random password: kubectl -n grafana create secret generic grafana-initial-admin \\ --from-literal = admin-user = admin \\ --from-literal = admin-password = \" $( cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1 ) \"","title":"Grafana"},{"location":"grafana/#grafana","text":"New clusters will start with the grafana deployment blocked from starting a pod for lack of the grafana-initial-admin secret existing. Creating this secret will enable grafana to start up and create an initial admin login. The secret should be left on the cluster after that as the deployment requires it, but making changes to it will not update any Grafana login unless Grafana\u2019s persistent storage is reset.","title":"Grafana"},{"location":"grafana/#creating-grafana-admin-secret","text":"Use this command to generate a usable secret with a random password: kubectl -n grafana create secret generic grafana-initial-admin \\ --from-literal = admin-user = admin \\ --from-literal = admin-password = \" $( cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1 ) \"","title":"Creating grafana-admin-secret"},{"location":"ingress/","text":"Ingress \u00b6 *.sandbox.k8s.phl.io should be configured to resolve to the cluster\u2019s ingress-nginx service. To route a public hostname to a service in the cluster: Create an Ingress Apply the annotation kubernetes.io/ingress.class: nginx to associate with the cluster\u2019s main ingress service Apply the annotation cert-manager.io/cluster-issuer: letsencrypt-prod to enable automatic setup of an SSL certificate Assign an unused hostname under .sandbox.k8s.phl.io (every public service should start with one of these) Optionally, CNAME a custom hostname to the .sandbox.k8s.phl.io hostname and add it to the same ingress","title":"Ingress"},{"location":"ingress/#ingress","text":"*.sandbox.k8s.phl.io should be configured to resolve to the cluster\u2019s ingress-nginx service. To route a public hostname to a service in the cluster: Create an Ingress Apply the annotation kubernetes.io/ingress.class: nginx to associate with the cluster\u2019s main ingress service Apply the annotation cert-manager.io/cluster-issuer: letsencrypt-prod to enable automatic setup of an SSL certificate Assign an unused hostname under .sandbox.k8s.phl.io (every public service should start with one of these) Optionally, CNAME a custom hostname to the .sandbox.k8s.phl.io hostname and add it to the same ingress","title":"Ingress"}]}