apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations: {}
  labels:
    app: loki
    chart: loki-2.16.0
    heritage: Helm
    release: loki
  name: loki
  namespace: loki
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app: loki
      release: loki
  serviceName: loki-headless
  template:
    metadata:
      annotations:
        checksum/config: f7c516d64b976f04d4c31a243b6c2091ced173f942f6315d3ee2ba37ca7c0bd9
        prometheus.io/port: http-metrics
        prometheus.io/scrape: 'true'
      labels:
        app: loki
        name: loki
        release: loki
    spec:
      affinity: {}
      containers:
        - args:
            - '-config.file=/etc/loki/loki.yaml'
          env: null
          image: 'grafana/loki:2.6.1'
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          name: loki
          ports:
            - containerPort: 3100
              name: http-metrics
              protocol: TCP
            - containerPort: 9095
              name: grpc
              protocol: TCP
            - containerPort: 7946
              name: memberlist-port
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          resources: {}
          securityContext:
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /tmp
              name: tmp
            - mountPath: /etc/loki
              name: config
            - mountPath: /data
              name: storage
              subPath: null
      initContainers: []
      nodeSelector: {}
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: loki
      terminationGracePeriodSeconds: 4800
      tolerations: []
      volumes:
        - emptyDir: {}
          name: tmp
        - name: config
          secret:
            secretName: loki
        - emptyDir: {}
          name: storage
  updateStrategy:
    type: RollingUpdate
